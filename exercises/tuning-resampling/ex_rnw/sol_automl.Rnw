This exercise is a compact version of a tutorial on \href{}{mlr3gallery}, so 
feel free to explore the additional steps and explanations (there is also a 
bunch of other useful code demos).

\begin{enumerate}[a)]

  \item 
  <<echo=TRUE>>=
  library(mlr3verse)
  library(mlr3tuning)
  
  (task <- tsk("pima"))
  @
  
  \item 
  <<echo=TRUE>>=
  learners <- list(
    po(lrn("classif.kknn", id = "kknn")),
    po(lrn("classif.ranger", id = "ranger")))
  
  ppl_preproc <- ppl("robustify", task = task, factors_to_numeric = TRUE)
  ppl_learners <- ppl("branch", learners)
  ppl_combined <- ppl_preproc %>>% ppl_learners
  plot(ppl_combined)
  
  graph_learner <- as_learner(ppl_combined)
  
  graph_learner$param_set$values$branch.selection <- 
    to_tune(p_int(1, 2))
  graph_learner$param_set$values$kknn.k <- 
    to_tune(p_int(3, 10, depends = branch.selection == 1))
  graph_learner$param_set$values$ranger.mtry <-
    to_tune(p_int(1, 5, depends = branch.selection == 2))
  graph_learner$id = "graph_learner"

  set.seed(123)
  resample_result <- tune_nested(
    method = "random_search",
    task = task,
    learner = graph_learner,
    inner_resampling = rsmp ("cv", folds = 3),
    outer_resampling = rsmp("cv", folds = 3),
    measure = msr("classif.ce"),
    term_evals = 10)
  
  resample_result$score()
  resample_result$aggregate()
  extract_inner_tuning_results(resample_result)
  @
  
  
\end{enumerate}