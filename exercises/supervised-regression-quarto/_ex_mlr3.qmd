Throughout the lecture, we will frequently use the `R` package 
`mlr3`, resp. the `Python` package 
`sklearn`, and its descendants, providing an integrated ecosystem for all 
common machine learning tasks.
Let's recap the HRO principle and see how it is reflected in either `mlr3` or `sklearn`.
An overview of the most important objects and their usage, illustrated with 
numerous examples, can be found at [the `mlr3` book](https://mlr3book.mlr-org.com/) and
[the `scikit` documentation](https://scikit-learn.org/stable/index.html).

(@) How are the key concepts (i.e., hypothesis space, risk and optimization) 
  you learned about in the lecture videos implemented?
  
::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>
::: {.panel-tabset}

### R
Model classes representing a certain **hypothesis** are stored in `learner` objects. Before training them on actual
data, they just contain information on the functional form of $f$. Once a learner has been trained we can examine
the parameters of the resulting model. The empirical **risk** can be assessed after training by several performance
measures (e.g., based on $L2$ loss). **Optimization** happens rather implicitly as `mlr3` only acts as a wrapper for
existing implementations and calls package-specific optimization procedures.

### Python
tbd
:::
</details> 
:::

(@) Have a look at`mlr3::tsk("iris")` / `from sklearn.datasets import load_iris`. What attributes does this object store?

::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>
::: {.panel-tabset}

### R

### Python
tbd
:::
</details> 
:::

(@) Pick a module for classification or regression of your choice. What are the different settings for this learner?
  * `R` Hint: use `mlr3::mlr_learners$keys()` to see all available learners.
  * `Python` Hint: Import the specific module and use `get_params()` to see all available settings.
  
::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>
::: {.panel-tabset}

### R

### Python
tbd
:::
</details> 
:::
