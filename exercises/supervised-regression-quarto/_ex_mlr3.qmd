Throughout the lecture, we will frequently use the `R` package 
`mlr3`, resp. the `Python` package 
`sklearn`, and its descendants, providing an integrated ecosystem for all 
common machine learning tasks.
Let's recap the HRO principle and see how it is reflected in either `mlr3` or `sklearn`.
An overview of the most important objects and their usage, illustrated with 
numerous examples, can be found at [the `mlr3` book](https://mlr3book.mlr-org.com/) and
[the `scikit` documentation](https://scikit-learn.org/stable/index.html).

(@) How are the key concepts (i.e., hypothesis space, risk and optimization) 
  you learned about in the lecture videos implemented?
  
::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>

::: {.panel-tabset}
### R
{{< embed _r.ipynb#hro echo=true >}}

### Python
{{< embed _python.ipynb#hro echo=true >}}
:::
</details> 
:::

(@) Have a look at`mlr3::tsk("iris")` / `sklearn.datasets.load_iris`. What attributes does this object store?

::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>
::: {.panel-tabset}

### R
{{< embed _r.ipynb#iris echo=true >}}

### Python
{{< embed _python.ipynb#iris echo=true >}}
:::
</details> 
:::

(@) Instantiate a regression tree learner. What are the different settings for this learner?
  * `R` Hint: use `lrn("regr.rpart")` (`mlr3::mlr_learners$keys()` shows all available learners).
  * `Python` Hint: use the `DecisionTreeRegressor` module and use `get_params()` to see all available settings.
  
::: {.content-visible when-profile="solution"}
<details> 
<summary>**Solution**</summary>
::: {.panel-tabset}

### R
{{< embed _r.ipynb#learner echo=true >}}

### Python
{{< embed _python.ipynb#learner echo=true >}}
:::
</details> 
:::
